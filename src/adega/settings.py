"""
Django settings for submission project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import json
from django.contrib import messages
env = os.environ.copy()

with open('config.json') as json_file:
    data = json.load(json_file)
    EMAIL_HOST = data['email_host']
    EMAIL_PORT = data['email_port']
    # EMAIL_HOST_USER = data['email_host_user']
    # EMAIL_HOST_PASSWORD = data['email_host_password']
    # EMAIL_USE_TLS = data['email_use_lts']

# print(EMAIL_HOST)

    

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.join(BASE_DIR, '..')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.get("SECRET_KEY", 'e#-^aknk(5k)ej6rh#h$i(%h(m9)-j*lwrc_1dxnk=a@-mixlt'),
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ['VERSION'] == "DEVELOPMENT"

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'widget_tweaks',
    'guardian',

    'adega',
    'public',
    'degree',
    'educator',
    'admission',
    'course',
    'student',
    'cepe9615',
    'report_api',
    'submission',
    'faq'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'adega.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
            'libraries':{
                'adega_templatetag': 'adega.templatetags.adega_templatetag',
            }
        },
    },
]

WSGI_APPLICATION = 'adega.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env.get("POSTGRES_DB", "adega"),
        'USER': env.get("POSTGRES_USER", "adega"),
        'PASSWORD': env.get("POSTGRES_PASSWORD", "adega"),
        'HOST': env.get("POSTGRES_HOST", "adega_db_1"),
        'PORT': env.get("POSTGRES_PORT", "5432")
    }
}

AUTHENTICATION_BACKENDS = [
        'public.auth.EmailBackend',
        'guardian.backends.ObjectPermissionBackend',

        ]

ANONYMOUS_USER_NAME = "Público"

LOGIN_URL = 'public:index'

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


if not DEBUG:
#    FORCE_SCRIPT_NAME = '/adega/'
#    STATIC_URL = '/static/'
    STATIC_URL = '/static/'

else:
    STATIC_URL = '/static/'


STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

MEDIA_URL = '/script/base/'
MEDIA_ROOT = os.path.join(PROJECT_DIR, 'submission')

# MEDIA_URL = None # a gente não quer ninguem fazendo download disso
# MEDIA_ROOT = os.path.join(PROJECT_DIR, 'submission')
